import{_ as n,o as s,c as a,e}from"./app-25465c35.js";const p={},t=e(`<h1 id="模块" tabindex="-1"><a class="header-anchor" href="#模块" aria-hidden="true">#</a> 模块</h1><p>前面我们通过定义函数，来实现代码的重用。但如果想让编写的函数，在其它Python程序里面也能使用，该怎么办呢？这就要引入Python的模块。</p><h2 id="模块的导入" tabindex="-1"><a class="header-anchor" href="#模块的导入" aria-hidden="true">#</a> 模块的导入</h2><p>Python之所以那么受欢迎，其中一个原因就是有丰富的模块，我们可以通过“help(&quot;modules&quot;)”来查询固件内置的模块，也可以导入“import”其它模块。</p><p>我们后面的硬件编程，其实就是使用“machine”这个模块，使用这个模块提供的函数，实现对硬件的控制。</p><p>导入模块有两种方式，一种是使用“import”+模块名，另外一种是“from”+模块名+“import”+名字。前者导入的是整个模块，后者导入的模块指定名字的部分。</p><p>如下代码段所示，导入整个模块和部分导入。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入模块（exp15.py）</span>

<span class="token keyword">import</span> math          <span class="token comment"># 导入整个数学函数模块</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 计算64的平方根</span>

<span class="token keyword">from</span> math <span class="token keyword">import</span> pi<span class="token punctuation">,</span> fabs <span class="token comment"># 从模块中导入个别值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span>                 <span class="token comment"># 打印导入的pi</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>fabs<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment"># 使用导入的fabs求绝对值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">8.0</span>
<span class="token number">3.141593</span>
<span class="token number">40.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义模块" tabindex="-1"><a class="header-anchor" href="#自定义模块" aria-hidden="true">#</a> 自定义模块</h2><p>一个Python文件，就可以当作一个模块，因此我们可以编写一个自定义模块，再在其它程序里面调用这个模块。</p><p>这里我们先创建一个“exp16.py”作为模块，如下代码段 所示。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 自定义模块（exp16.py）</span>

<span class="token keyword">def</span> <span class="token function">max_num</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    <span class="token string">&quot;功能: 打印两个数字中较大的一个&quot;</span>
    <span class="token keyword">if</span> a<span class="token operator">&gt;</span>b<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">&quot;is maximun&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> a<span class="token operator">&lt;</span>b<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">&quot;is maximun&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">&quot;is equal to&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个模块文件要放到 DshanMCU-Mio(澪) 里面，这样其它程序才能找到调用。</p><p>勾选Thonny菜单栏的“文件”，如下图所示。</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-8_images_001.jpg" alt="DShanMCU-Mio_MicroPython_chapter3_images_001"></p><p>然后我们看到文件窗口出来了，我们点击 &quot;此电脑&quot; 浏览我们的磁盘，进入到我们的基础示例所在的目录：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-8_images_002.jpg" alt="DShanMCU-Mio_MicroPython_chapter3-8_images_002"></p><p>双击 &quot;基础语法&quot; 目录，即可看到这样的窗口，这样只会展示此目录的内容，后面操作起来方便很多：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-8_images_003.jpg" alt="DShanMCU-Mio_MicroPython_chapter3-8_images_003"></p><p>找到 “exp16.py” 文件，选中它，鼠标右边，选择 <code>上传到/</code> ，然后在 <code>MicroPython设备</code> 窗口会看到多了 “exp16.py” 文件，如下图所示：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-8_images_004.jpg" alt="DShanMCU-Mio_MicroPython_chapter3-8_images_004"></p><p>然后在 Thonny 中创建 “exp17.py” ，调用刚才的模块，代码如下代码段所示：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 调用自定义模块（exp17.py）</span>

<span class="token keyword">import</span> exp16

exp16<span class="token punctuation">.</span>max_num<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下图所示：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-8_images_005.jpg" alt="DShanMCU-Mio_MicroPython_chapter3-8_images_005"></p>`,27),o=[t];function i(c,l){return s(),a("div",null,o)}const u=n(p,[["render",i],["__file","chapter3-8.html.vue"]]);export{u as default};
