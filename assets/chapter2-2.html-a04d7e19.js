import{_ as i,r as n,o as s,c as d,a as o,b as e,d as p,e as r}from"./app-25465c35.js";const t={},c=o("h1",{id:"基于windows平台",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#基于windows平台","aria-hidden":"true"},"#"),e(" 基于Windows平台")],-1),h=o("p",null,"Windows应该是大家常见的工作平台，即使是我们这些开发人员也是如此。所以我们也是推荐大家使用Windows平台作为首选的开发环境，并且推荐使用 Windows 10 系统。因为微软官方已经官宣停止对Windows 7 的更新和维护，所以我们最好不好使用windows 7以及比windows 7 更低的版本来搭建开发环境，否则可能会出现各种不必要甚至是无法得到解决的问题。",-1),u=o("p",null,"windows 10还有一个优点是，很多驱动都能自动联网安装，免去了我们手动安装的麻烦，比如我们将 DshanMCU-Mio(澪) 第一次接入我们PC上的时候，如果安装的是Windwos 10系统，那么会有弹窗提示正在安装驱动，这是非常智能方便的。",-1),_={href:"https://forums.100ask.net/c/esp/49",target:"_blank",rel:"noopener noreferrer"},l=r(`<h2 id="安装arduino-ide" tabindex="-1"><a class="header-anchor" href="#安装arduino-ide" aria-hidden="true">#</a> 安装Arduino IDE</h2><p>安装Arduino IDE有两个方法：</p><ul><li>使用需要安装的安装版 Arduino IDE</li><li>使用开箱即用的绿色版 Arduino IDE</li></ul><p>因为 Arduino IDE 默认没有适配 ESP32-S3 开发环境，所以不管使用哪种安装方法，我们都要在能打开 Arduino IDE 之后，再进一步配置我们的 ESP32-S3+Arduino 开发环境，这个配置过程都是一样的，我们提供了很简便的配置方法。</p><p>下面我们先分别了解这两种安装方法。</p><h3 id="安装版-arduino-ide" tabindex="-1"><a class="header-anchor" href="#安装版-arduino-ide" aria-hidden="true">#</a> 安装版 Arduino IDE</h3><p>需要将 Arduino IDE 安装到我们的PC中，安装完成之后可以将安装包删除，相比绿色版麻烦很多。</p><ul><li>首先，我们找到 <code>03_开发工具/arduino-ide_2.0.0_Windows_64bit.exe</code> 安装包所在的目录</li><li>然后，双击 <code>arduino-ide_2.0.0_Windows_64bit.exe</code> 按照默认的选项进行安装</li></ul><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_001.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_001"></p><ul><li>最后，安装完成你可以在桌面看到多出来了一个叫 <code>arduino</code> 的快捷方式的图标，以后我们双击改图片即可打开 <code>Arduino IDE</code>。</li></ul><h3 id="绿色版-arduino-ide" tabindex="-1"><a class="header-anchor" href="#绿色版-arduino-ide" aria-hidden="true">#</a> 绿色版 Arduino IDE</h3><p>绿色版的意思是不需要将 Arduino IDE 安装到我们的PC中，解压之后进入压缩包目录双击 <code>Arduino IDE.exe</code> 即可打开 Arduino IDE 进行开发，相对于安装版来说方便很多，但是我们要保留我们的解压出来的文件。</p><ul><li>首先，我们找到 <code>03_开发工具/arduino-ide_2.0.0_Windows_64bit.zip</code> 压缩包所在的目录</li><li>然后将 <code>arduino-ide_2.0.0_Windows_64bit.zip</code> 解压到你自定义的目录(也可以直接解压到当前文件夹中)</li><li>最后，进入到 <code>arduino-ide_2.0.0_Windows_64bit</code> 目录，打开 <code>Arduino IDE.exe</code> 即可看到IDE界面</li></ul><p>为了方便后面的使用，建议将 <code>arduino-ide_2.0.0_Windows_64bit.zip</code> 解压到一个你认为可以很好存放软件的目录，比如 <code>D:\\SoftWare</code>。还有你可以像下图这样创建 <code>Arduino IDE.exe</code> 的快捷方式在桌面或者固定到任务栏或者导航栏，这样我们以后就可以很方便地打开 <code>Arduino IDE</code>。</p><h2 id="配置-esp32-s3-arduino-开发环境" tabindex="-1"><a class="header-anchor" href="#配置-esp32-s3-arduino-开发环境" aria-hidden="true">#</a> 配置 ESP32-S3+Arduino 开发环境</h2><p>在我们能打开 <code>Arduino IDE</code> 并且进入主界面之后，我们就可以配置 ESP32-S3+Arduino 开发环境了。</p><p>如果使用我们的配套资料，那么配置过程非常简单，但是有两个前提条件要满足：</p><ul><li>能打开 <code>Arduino IDE</code> 并且进入了主界面</li><li>下载了我们的配套资料</li></ul><p>上面这两个条件都满足了之后按照下面的步骤操作：</p><p>打开 Arduino IDE 开发板管理目录，我这里是下面这个路径</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>100ask<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Arduino15
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也就是注意留意看你的用户名是多少，我们按照下图这样操作可以确定当前使用的用户名是哪个：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_002.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_002"></p><p>很明显，图中的用户名是 <code>smile</code> 路径是 <code>C:\\Users\\smile</code> 那么按照上面的说明，我们可以定位到自己的开发板管理目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>smile<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Local<span class="token punctuation">\\</span>Arduino15
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们将修改后的路径复制下来，打开Windows系统的 <code>文件资源管理器</code> ，按照下图步骤进行操作：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_003.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_003"></p><p>我们继续进入到 <code>packages</code> 目录，看到内容是下图这样的：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_004.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_004"></p><p>我们接下来需要将我们的esp32开发板包(packages)添加进去即可，这个“包”在目录：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_005.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_005"></p><p>如果你安装了解压缩工具，那么解压到指定目录非常简单：</p><ul><li>你可以选中压缩包，然后点击鼠标右键选择 <code>解压到...</code> 即可</li><li>你可以双击打开压缩包，然后全选压缩包中的内容，将其拖动到指定目录即可(先在packages目录新建esp32目录再拖动到当中)。</li></ul><blockquote><p>无论是哪种解压方式，都要确保我们增加的开发板包的目录是 <code>esp32</code>。</p></blockquote><p>这是esp32目录中的内容，主要路径要和图中的一样：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_006.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_006"></p><p>这样就大功告成，我们打开(重启)我们的 <code>Arduino IDE</code> 后，依次选择： \`tools-&gt;Board&#39; 就能看到多出来了 esp32 的选项：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_007.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_007"></p><h2 id="开发套件的使用" tabindex="-1"><a class="header-anchor" href="#开发套件的使用" aria-hidden="true">#</a> 开发套件的使用</h2><h3 id="安装驱动" tabindex="-1"><a class="header-anchor" href="#安装驱动" aria-hidden="true">#</a> 安装驱动</h3><p>按照上面的操作，我们已经配置好开发环境，下面我们再来看看怎么在 <code>Arduino IDE</code> 中使用 DshanMCU-Mio(澪) 进行开发。</p><p>我们将 DshanMCU-Mio(澪) 上印有 UART 的 Type-C 接口，通过配套的 Type-C 线连接到我们的PC上的USB接口上，如下图所示：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_008.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_008"></p><p>在 Windows 10 操作系统中，一般在你接上之后不久就会提示正在自动安装驱动。</p><p>我们右键点击 <strong>“我的电脑”</strong> ，然后依次点击： 属性-&gt;设备管理。打开 <strong>设备管理器</strong> 界面之后能看到 <code>端口(COM和LPT)</code>选项， 并且其中有新接入的设备串口(COM)号，说明驱动没有问题，可以正常使用。</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_009.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_009"></p><p>如果 <strong>驱动异常</strong>，那么就是你PC的系统无法自动安装驱动，这时候就需要我们 <strong>手动安装驱动</strong> ，方法如下：</p><p>如果驱动异常，我们新接入的设备会显示一个 <strong>黄色的感叹号</strong>，我们选中这个设备项，然后点击鼠标右键，在弹出的菜单栏中选择 <code>更新驱动程序</code>：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/Arduino/chapter2/DShanMCU-Mio_Arduino_chapter2-2_images_009.jpg" alt="DShanMCU-Mio_Arduino_chapter2-2_images_009"></p><p>然后会弹出一个页面，我们选择 <code>“浏览计算机查找驱动”</code>：</p><p>驱动的路径选择： <code>DShanMCU-Mio_Arduino_Data\\03_开发工具\\</code>，点击 <code>“确定”</code> 后就会安装驱动。</p><p>驱动安装完成之后，再检查 <strong>设备管理器</strong> 中是否有串口(COM)号。</p><blockquote><p>资料中的驱动是压缩包，我们要先解压这个压缩包再选择驱动，这里略过解压操作教程。</p></blockquote><p>我们的驱动没有问题可以使用之后，我们就可以在 Arduino IDE 中和我们手上的 DShanMCU-Mio 进行交互(开发)了！</p><p>至此，我们的开发环境就完全搭建好了，接下来的章节中我们开始进行更多的实验、学习更多的内容吧！</p>`,55);function M(g,D){const a=n("ExternalLinkIcon");return s(),d("div",null,[c,h,u,o("p",null,[e("当然了，如果你确实智能使用其他版本的Windows系统，那么在出现问题的时候也是可以在我们的 "),o("a",_,[e("交流社区"),p(a)]),e(" 提问，会有专业的老师或者热心的同学一起帮你解决问题！")]),l])}const m=i(t,[["render",M],["__file","chapter2-2.html.vue"]]);export{m as default};
