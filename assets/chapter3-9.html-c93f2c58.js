import{_ as n,o as s,c as a,e}from"./app-25465c35.js";const t={},p=e(`<h1 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作" aria-hidden="true">#</a> 文件操作</h1><p>DshanMCU-Mio(澪) 开发板自身的Flash足够大，所以不许要TF卡也能支持文件系统。在这个文件系统里，我们可以进行文件的创建、修改、删除等操作。</p><p>如下代码段所示，先判断文件是否存在，存在就打印内容，不存在就创建，写入文件。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 文件操作示例（exp18.py）</span>

<span class="token keyword">import</span> os

<span class="token comment"># 判断文件是否存在</span>
<span class="token keyword">if</span> <span class="token string">&quot;hello.txt&quot;</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 文件存在</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;File already exists.&quot;</span><span class="token punctuation">)</span> <span class="token comment"># 打印存在提示</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 以只读方式打开该文件</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment"># 读取文件一行并打印</span>
    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                     <span class="token comment"># 关闭文件</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>                             <span class="token comment"># 文件不存在</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Create file.&quot;</span><span class="token punctuation">)</span>         <span class="token comment"># 文件不存在       </span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 如果文件不存在,open就是创建文件</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;hello MicroPython&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 写文件</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                     <span class="token comment"># 关闭文件</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首次执行shell窗口提示结果如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Create file.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着再执行一次，可以在shell窗口中看到如下信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>File already exists.
hello MicroPython
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候我们在 MicroPython设备 窗口，按下鼠标右键在弹出的菜单栏中选择 <code>显示隐藏文件</code> 选项，就能看到 &quot;hello.txt&quot; 文件，如下图所示：</p><p><img src="https://photos.100ask.net/esp32-docs/DShanMCU-Mio/MicroPython/chapter3/DShanMCU-Mio_MicroPython_chapter3-9_images_001.jpg" alt="DShanMCU-Mio_MicroPython_chapter3-9_images_001"></p><blockquote><p>在 Thonny 中默认只会识别并显示 .py 后缀的文件，如果是其他文件会被Thonny认为是无法识别使用的文件而被屏蔽起来。</p></blockquote>`,11),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","chapter3-9.html.vue"]]);export{r as default};
